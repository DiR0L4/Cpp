#!/usr/bin/env python3
import numpy as np
import matplotlib.pyplot as plt
from sklearn import svm
from math import *

data_x = [(3.0, 1.3), (3.4, 1.6), (3.4, 0.4), (3.7, 0.2), (3.5, 0.2), (3.4, 0.2), (3.4, 0.4), (3.9, 0.4), (3.4, 0.3), (3.2, 0.2), (2.8, 1.3), (3.5, 0.3), (2.4, 1.0), (3.0, 0.1), (3.6, 0.2), (3.2, 0.2), (2.9, 0.2), (2.9, 1.3), (2.3, 1.3), (3.8, 0.2), (3.2, 1.5), (2.3, 1.0), (3.0, 1.7), (3.3, 0.2), (3.4, 0.2), (3.8, 0.3), (2.0, 1.0), (3.1, 0.2), (2.5, 1.3), (2.4, 1.1), (3.2, 0.2), (2.2, 1.0), (3.1, 1.4), (3.0, 0.2), (3.0, 0.2), (3.4, 0.2), (3.7, 0.2), (2.8, 1.2), (2.9, 1.4), (4.0, 0.2), (3.2, 1.4), (3.2, 0.2), (2.9, 1.3), (2.9, 1.3), (3.5, 0.2), (3.3, 1.6), (2.9, 1.3), (2.7, 1.0), (2.9, 1.3), (3.4, 0.2), (3.2, 0.2), (4.1, 0.1), (3.5, 0.6), (2.7, 1.4), (2.3, 0.3), (2.9, 1.5), (3.1, 1.5), (3.5, 0.2), (2.7, 1.6), (3.3, 0.5), (3.0, 1.4), (3.6, 0.2), (3.0, 1.2), (2.8, 1.3), (2.5, 1.1), (3.0, 1.5), (3.1, 0.2), (2.6, 1.0), (2.7, 1.2), (2.2, 1.5), (3.7, 0.4), (3.4, 0.2), (3.5, 0.3), (3.6, 0.1), (2.5, 1.5), (2.6, 1.2), (2.8, 1.3), (3.1, 0.1), (2.4, 1.0), (3.1, 1.5), (2.3, 1.3), (2.8, 1.5), (3.0, 0.3), (3.0, 0.2), (2.5, 1.1), (3.0, 1.5), (3.2, 1.8), (3.9, 0.4), (2.8, 1.4), (4.2, 0.2), (3.4, 0.2), (2.7, 1.3), (3.8, 0.3), (3.0, 1.4), (2.6, 1.2), (4.4, 0.4), (3.8, 0.4), (3.1, 0.2), (3.0, 0.1), (3.0, 1.5)]
data_y = [1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, -1, 1, -1, 1, 1, -1, 1, 1, -1, -1, -1, -1, 1, 1, -1, 1, -1, 1, 1, -1, 1, 1, 1, 1, -1, -1, -1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, 1, 1, 1, -1, 1, 1, 1, -1, -1, -1, -1, 1, 1, 1, -1, 1, 1, 1, 1, -1, -1, 1, 1, 1, -1, 1, -1, -1, 1, -1, 1, 1, -1, -1, -1, -1, 1]

#data_x = [(3.0, 4.9), (2.7, 3.9), (3.0, 5.5), (2.6, 4.0), (2.9, 4.3), (3.1, 5.1), (2.2, 4.5), (2.3, 3.3), (2.7, 5.1), (3.3, 5.7), (2.8, 5.1), (2.8, 4.9), (2.5, 4.5), (2.8, 4.7), (3.2, 4.7), (3.2, 5.7), (2.8, 6.1), (3.6, 6.1), (2.8, 4.8), (2.9, 4.5), (3.1, 4.9), (2.3, 4.4), (3.3, 6.0), (2.6, 5.6), (3.0, 4.4), (2.9, 4.7), (2.8, 4.0), (2.5, 5.8), (2.4, 3.3), (2.8, 6.7), (3.0, 5.1), (2.3, 4.0), (3.1, 5.5), (2.8, 4.8), (2.7, 5.1), (2.5, 4.0), (3.1, 4.4), (3.8, 6.7), (3.1, 5.6), (3.1, 4.7), (3.0, 5.8), (3.0, 5.2), (3.0, 4.5), (2.7, 4.9), (3.0, 6.6), (2.9, 4.6), (3.0, 4.6), (2.6, 3.5), (2.7, 5.1), (2.5, 5.0), (2.0, 3.5), (3.2, 5.9), (2.5, 5.0), (3.4, 5.6), (3.4, 4.5), (3.2, 5.3), (2.2, 4.0), (2.2, 5.0), (3.3, 4.7), (2.7, 4.1), (2.4, 3.7), (3.0, 4.2), (3.2, 6.0), (3.0, 4.2), (3.0, 4.5), (2.7, 4.2), (2.5, 3.0), (2.8, 4.6), (2.9, 4.2), (3.1, 5.4), (2.5, 4.9), (3.2, 5.1), (2.8, 4.5), (2.8, 5.6), (3.4, 5.4), (2.7, 3.9), (3.0, 6.1), (3.0, 5.8), (3.0, 4.1), (2.5, 3.9), (2.4, 3.8), (2.6, 4.4), (2.9, 3.6), (3.3, 5.7), (2.9, 5.6), (3.0, 5.2), (3.0, 4.8), (2.7, 5.3), (2.8, 4.1), (2.8, 5.6), (3.2, 4.5), (3.0, 5.9), (2.9, 4.3), (2.6, 6.9), (2.8, 5.1), (2.9, 6.3), (3.2, 4.8), (3.0, 5.5), (3.0, 5.0), (3.8, 6.4)]
#data_y = [1, -1, 1, -1, -1, 1, -1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, 1, -1, -1, -1, -1, 1, 1, -1, -1, -1, 1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, -1, -1, 1, 1, -1, 1, 1, 1, -1, 1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, 1, 1, -1, 1, 1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, -1, 1, -1, 1, -1, 1, 1, 1, -1, 1, -1, 1]

#data_x = [(1.3, 5.5), (1.5, 4.9), (4.9, 6.3), (1.5, 5.2), (3.5, 5.7), (1.4, 4.6), (4.8, 5.9), (4.5, 5.7), (3.7, 5.5), (1.5, 5.3), (4.6, 6.1), (1.6, 4.8), (1.5, 5.0), (4.0, 5.5), (1.3, 4.7), (1.4, 5.0), (1.7, 5.1), (1.5, 5.2), (3.9, 5.2), (1.5, 4.6), (4.1, 5.8), (1.9, 5.1), (4.0, 5.5), (4.6, 6.6), (4.5, 6.4), (4.5, 6.0), (4.7, 6.1), (1.3, 4.5), (5.1, 6.0), (4.4, 6.6), (4.0, 6.1), (4.5, 6.2), (3.8, 5.5), (1.5, 5.4), (4.9, 6.9), (3.0, 5.1), (4.5, 5.6), (1.4, 4.9), (4.0, 5.8), (5.0, 6.7), (4.4, 5.5), (3.9, 5.6), (1.4, 4.6), (3.3, 4.9), (3.9, 5.8), (4.2, 5.7), (4.4, 6.3), (1.4, 5.1), (1.6, 5.0), (1.5, 5.1), (4.7, 6.3), (3.6, 5.6), (4.4, 6.7), (1.7, 5.4), (1.3, 4.4), (4.1, 5.6), (1.0, 4.6), (4.3, 6.2), (1.4, 4.4), (4.5, 6.0), (4.7, 6.7), (3.3, 5.0), (1.5, 4.9), (3.5, 5.0), (1.6, 4.7), (1.4, 4.9), (1.4, 4.8), (1.3, 5.0), (4.6, 6.5), (4.0, 6.0), (4.7, 6.1), (1.6, 5.0), (1.4, 5.2), (4.7, 7.0), (1.1, 4.3), (1.6, 5.1), (4.3, 6.4), (1.2, 5.8), (1.9, 4.8), (1.4, 4.8), (1.5, 5.1), (4.8, 6.8), (4.1, 5.7), (1.7, 5.7), (1.6, 5.0), (4.2, 5.7), (1.6, 4.8), (1.2, 5.0), (1.3, 4.4), (1.7, 5.4), (4.5, 5.4), (4.2, 5.6), (1.5, 5.4), (1.4, 5.5), (1.4, 5.1), (1.5, 5.1), (4.2, 5.9), (1.5, 5.7), (1.4, 5.0), (1.3, 5.4)]
#data_y = [-1, -1, 1, -1, 1, -1, 1, 1, 1, -1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, 1, -1, 1, 1, 1, 1, 1, -1, 1, 1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 1, -1, 1, 1, 1, 1, -1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, -1, 1, 1, 1, -1, 1, -1, -1, -1, -1, 1, 1, 1, -1, -1, 1, -1, -1, 1, -1, -1, -1, -1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, 1, -1, -1, -1]

x_train = np.array([np.asarray(x) for x in data_x])
y_train = np.array(data_y)

clf = svm.SVC(kernel='linear')      # SVM с линейным ядром
clf.fit(x_train, y_train)           # нахождение вектора w по обучающей выборке

v = clf.support_vectors_            # выделение опорных векторов
w = clf.coef_[0]                # коэффициенты линейной модели
b = clf.intercept_[0]
score = clf.score(x_train, y_train)      

print(f"score = {score}")

x_max = max(x_train[:, 0]) + 0.25
x_min = min(x_train[:, 0]) - 0.25

y_max = max(x_train[:, 1]) + 0.25
y_min = min(x_train[:, 1]) - 0.25

# формирование графиков для визуализации полученных результатов
x_train = np.array(x_train)
y_train = np.array(y_train)

line_x = list(range(floor(x_min),ceil(x_max)))
line_y = [-x*w[0]/w[1] - b/w[1] for x in line_x]

x_0 = x_train[y_train == 1]                 # формирование точек для 1-го
x_1 = x_train[y_train == -1]                # и 2-го классов

plt.scatter(v[:, 0], v[:, 1], s=70, edgecolor=None, linewidths=0, marker='s')
plt.scatter(x_0[:, 0], x_0[:, 1], color='red')
plt.scatter(x_1[:, 0], x_1[:, 1], color='blue')
plt.plot(line_x, line_y, color='green')

plt.xlim([x_min, x_max])
plt.ylim([y_min, y_max])
plt.ylabel("длина")
plt.xlabel("ширина")
plt.grid(True)
plt.show()